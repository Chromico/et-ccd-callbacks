plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id 'net.ltgt.apt' version '0.10'
    id 'org.sonarqube' version '3.1.1'
    id 'org.owasp.dependencycheck' version '6.1.2'
    id 'com.github.ben-manes.versions' version '0.36.0'
}

group = 'uk.gov.hmcts.ethos.replacement'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11.0'
    targetCompatibility = '11.0'
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}

def sonarExclusions = ['**/uk/gov/hmcts/ethos/replacement/docmosis/config/**',
                       '**/uk/gov/hmcts/ethos/replacement/docmosis/model/**',
                       '**/uk/gov/hmcts/reform/ethos/replacement/docmosis/CaseOrchestrationApplication'
]

sonarqube {
    properties {
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.projectKey", "ethos-repl-docmosis-service"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sourceSets {
    test {
        java.srcDir 'src/test/java'
    }
    functional {
        java.srcDir 'src/test/functional/java'
        resources.srcDir 'src/test/functional/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    functionalCompile.extendsFrom testCompile
    functionalRuntime.extendsFrom testRuntime
}

test {
    exclude '**/*ComponentTest*'
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.functional.output.classesDirs
    classpath = sourceSets.functional.runtimeClasspath

    useJUnit {
        includeCategories 'uk.gov.hmcts.ethos.replacement.functional.SmokeTest'
    }
    systemProperty('VAULTNAME', System.getenv('VAULTNAME'))
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
    testClassesDirs = sourceSets.functional.output.classesDirs
    classpath = sourceSets.functional.runtimeClasspath

    useJUnit {
        includeCategories 'uk.gov.hmcts.ethos.replacement.functional.SmokeTest'
    }

    systemProperty('VAULTNAME', System.getenv('VAULTNAME'))
    //systemProperty('tags', 'FunctionalTest')

    maxHeapSize = '1G'
//    finalizedBy aggregate
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

def versions = [
        springfoxSwagger: '2.9.2',
        logging: '5.1.7',
        serenity: '2.3.31'
]

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.retry:spring-retry'

    implementation 'org.postgresql:postgresql:42.2.2'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.7'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.5.RELEASE'
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.1'
    implementation group: 'io.github.openfeign', name: 'feign-core', version: '11.1'

    implementation group: 'uk.gov.hmcts.reform', name: 'ecm-common', version: '0.1.53'
    implementation group: 'uk.gov.hmcts.reform', name: 'document-management-client', version: '6.0.0'
    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.logging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.logging
    implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.1.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation (group: 'org.docx4j', name: 'docx4j', version: '6.1.2') {
        exclude module: 'slf4j-log4j12'
    }
    testImplementation group: 'com.auth0', name: 'java-jwt', version: '3.14.0'
    testImplementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    testImplementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    testImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'

    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '2.3.31', {
        exclude module: 'jaxb-osgi'
    }
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
}

bootJar {
    getArchiveFileName().set(provider {
        'ethos-repl-docmosis-service.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
